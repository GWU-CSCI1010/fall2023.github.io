[
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Sample class schedule [week-by-week]\n(The course schedule subject to changes during the semester)\n\n\n\n\n\n\n\n\n\n\nDate\n\n\nTopic(s)\n\n\n\\(\\mu\\)-LABs and Assignment(s) due\n\n\n\n\n\n\n\n\nWeek 1 [01/20/2023]\n\n\n\n\nOverview of CS1010 by Prof. Kartik Bulusu\n\n\nIntroduction to Computer Science Department by Prof. Rebecca Hwa (Website TBA)\n\n\nIntroduction to Raspberry Pi and Python programming by Prof. Kartik Bulusu (Website TBA)\n\n\nLecture Notes (Website TBA)\n\n\n\n\n\n\n\nPython programming using DeepNote TBA\n\n\nIn-class Raspberry Pi Lab (Blinking LEDs)\n\n\nWorking Styles Workout Survey (Google form TBA)\n\n\nLab examples (github TBA)\n\n\nHW 1 Assigned (Website TBA)\n\n\n\n\n\n\n\n\n\nNOTE: In accordance with university policy, the final exams will be given during the final exam period and not the last week of the semester\n\n\n\n\n\n\n\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "policies.html",
    "href": "policies.html",
    "title": "Course policies",
    "section": "",
    "text": "For example:\n\n\n\n\n\n\nAttendance and/or peer-to-peer and instructor interactions 10%\nIn-class work and Weekly Quizzes 10%\nPython programming and other Homework 30%\nProjects (including code, demo and presentation) 50%\n\n30% Individual midterm project\n20% Group final project There is no required final exam.\n\n\n\n\n \n\nexam by pongsakorn from Noun Project"
  },
  {
    "objectID": "policies.html#assignments-and-grades",
    "href": "policies.html#assignments-and-grades",
    "title": "Course policies",
    "section": "",
    "text": "For example:\n\n\n\n\n\n\nAttendance and/or peer-to-peer and instructor interactions 10%\nIn-class work and Weekly Quizzes 10%\nPython programming and other Homework 30%\nProjects (including code, demo and presentation) 50%\n\n30% Individual midterm project\n20% Group final project There is no required final exam.\n\n\n\n\n \n\nexam by pongsakorn from Noun Project"
  },
  {
    "objectID": "policies.html#grading-scale",
    "href": "policies.html#grading-scale",
    "title": "Course policies",
    "section": "Grading Scale",
    "text": "Grading Scale\nThe following grading scale will be applied at the end of the semester to calculate letter grades: 90-100: A, 84-89: A-, 78-83: B+, 72-77: B, 66-71: B-, 60-65: C+, 56-59: C, 52-55: C-, 46-51: D, 0-45: F.\nGrades are rounded to the nearest integer, e.g., 0.4 rounds to 0 and 0.5 rounds to 1."
  },
  {
    "objectID": "policies.html#additional-important-information-about-grading-policy",
    "href": "policies.html#additional-important-information-about-grading-policy",
    "title": "Course policies",
    "section": "Additional important information about grading policy:",
    "text": "Additional important information about grading policy:\n\nLate submissions on Homework and projects will not be acceptable.\nAny questions or follow up about the assignments will be done only within 2 weeks of submission deadline.\n\nFollowing the week after the submission deadline no further discussion on the assignment will be done."
  },
  {
    "objectID": "policies.html#classroom-policies-and-student-responsibilities",
    "href": "policies.html#classroom-policies-and-student-responsibilities",
    "title": "Course policies",
    "section": "Classroom Policies and Student responsibilities",
    "text": "Classroom Policies and Student responsibilities\n\n\n\nThis course requires a combination of individual and group work entailing hands-on activities and frequent interactions with the instructional team. The lectures, labs and office hours are available for interacting with your group and the instruction team. In addition, a course messaging platform (Slack) is made available for the students to interact in groups and with the instruction team asynchronously. We ask that all students adhere to the course policies throughout the duration of the semester.\n\n\n\n \n\nclassroom by Chattapat from Noun Project\n\n\n\n\n\nBe respectful: Listen to the instructors. Keep an open mind to the course material presented. Limit the use of personal devices. Be aware that you are working in a group. Be mindful of your colleagues.\nBe responsible: Arrive on time. Attendance is the first pathway toward success. Submit the course deliverables on time. Help your team members.\nBe a communicator: Observe, Ask questions and Try out the materials presented during the course. Communicate with your team effectively and politely.\nBe a problem solver: Explore options to complete hands-on tasks. Make your own notes. Stay positive about the course outcomes."
  },
  {
    "objectID": "policies.html#justice-equity-diversity-inclusion-jedi-statement",
    "href": "policies.html#justice-equity-diversity-inclusion-jedi-statement",
    "title": "Course policies",
    "section": "Justice, Equity, Diversity, Inclusion (JEDI) statement",
    "text": "Justice, Equity, Diversity, Inclusion (JEDI) statement\n\n\n\nThe instruction team intends to students from all diverse backgrounds and perspectives by this course, The diversity that the students bring to this class be viewed as a resource, strength, and benefit. The course materials and activities presented in this course are intended to be respectful of: age, race, ethnicity, country of origin, language, religion, spiritual practice, sexual orientation, gender identity or expression, introversion/extroversion personality dimensions, and socioeconomic and mental/physical status.\n\n\n\n \n\nemployee diversity by Bold Yellow from Noun Project\n\n\n\n\n\nPlease let the main instructor know ways to improve the effectiveness of the course. See JEDI resources for student resources."
  },
  {
    "objectID": "policies.html#use-of-chatgpt-or-any-other-ai-based-models-for-in-class-work-and-deliverables",
    "href": "policies.html#use-of-chatgpt-or-any-other-ai-based-models-for-in-class-work-and-deliverables",
    "title": "Course policies",
    "section": "Use of chatGPT or any other AI-based models for in-class work and deliverables",
    "text": "Use of chatGPT or any other AI-based models for in-class work and deliverables\nThe use chatGPT or any other genreative AI-based tool is NOT PERMITTED.  Furthermore, the ethical issues regarding the use of chatGPT or any other AI-based models will be discussed in-class and course policy will be ammended according to the findings. The findings of any such discussions will be summarized and placed in-context of the Academic Integrity Code\n Resources that will guide the course policy changes during the course: \n\n\nchatGPT Course policy formulation\n\n\nchatGPT chatbot\n\n\nHow ChatGPT Could Transform Higher Education"
  },
  {
    "objectID": "policies.html#use-of-electronic-course-materials-and-class-recordings",
    "href": "policies.html#use-of-electronic-course-materials-and-class-recordings",
    "title": "Course policies",
    "section": "Use of Electronic Course Materials and Class Recordings",
    "text": "Use of Electronic Course Materials and Class Recordings\nStudents are encouraged to use electronic course materials, including recorded class sessions (if any), for private personal use in connection with their academic program of study. Electronic course materials and recorded class sessions should not be shared or used for non-course related purposes unless express permission has been granted by the instructor. Students who impermissibly share any electronic course materials are subject to discipline under the Student Code of Conduct. Please contact the instructor if you have questions regarding what constitutes permissible or impermissible use of electronic course materials and/or recorded class sessions. Please contact Disability Support Services if you have questions or need assistance in accessing electronic course materials."
  },
  {
    "objectID": "policies.html#university-policy-on-religious-holidays",
    "href": "policies.html#university-policy-on-religious-holidays",
    "title": "Course policies",
    "section": "University Policy on Religious Holidays",
    "text": "University Policy on Religious Holidays\n\nStudents should notify faculty during the first week of the semester of their intention to be absent from class on their day(s) of religious observance.\nFaculty should extend to these students the courtesy of absence without penalty on such occasions, including permission to make up examinations.\nFaculty who intend to observe a religious holiday should arrange at the beginning of the semester to reschedule missed classes or to make other provisions for their course‐related activities. For details and policy, see “Religious Holidays” at https://provost.gwu.edu/policies-procedures-and-guidelines"
  },
  {
    "objectID": "policies.html#support-for-students-outside-the-classroom",
    "href": "policies.html#support-for-students-outside-the-classroom",
    "title": "Course policies",
    "section": "Support for Students Outside the Classroom",
    "text": "Support for Students Outside the Classroom\nDisability Support Services (DSS) Any student who may need an accommodation based on the potential impact of a disability should contact the Disability Support Services office at 202‐994‐8250 in the Rome Hall, Suite 102, to establish eligibility and to coordinate reasonable accommodations. For additional information please refer to: https://disabilitysupport.gwu.edu/\nMental Health Services 202‐994‐5300 The University’s Mental Health Services offers 24/7 assistance and referral to address students’ personal, social, career, and study skills problems. Services for students include: crisis and emergency mental health consultations confidential assessment, counseling services (individual and small group), and referrals. https://healthcenter.gwu.edu/counseling-and-psychological-services"
  },
  {
    "objectID": "policies.html#academic-integrity-code",
    "href": "policies.html#academic-integrity-code",
    "title": "Course policies",
    "section": "Academic Integrity Code",
    "text": "Academic Integrity Code\nAcademic dishonesty is defined as cheating of any kind, including misrepresenting one’s own work, taking credit for the work of others without crediting them and without appropriate authorization, and the fabrication of information. You are not allowed to collaborate on the home works and lab assignments; for programming projects and hardware lab assignments, you can work in teams only if they are designated as team projects (labs). Unless otherwise specified, you cannot search for solutions or code on the web – but you can use any code that is included in the textbook or lecture notes (but please cite them). I will be using a SW tool that checks for program code similarities – any pair of programs or written reports with greater than 10% similarity will be closely examined.\nThe Office of Academic Integrity maintains a permanent record of the violation. More information is available from the Office of Academic Integrity at https://studentconduct.gwu.edu/academic-integrity. The University’s “Guide of Academic Integrity in Online Learning Environments” is available at https://studentconduct.gwu.edu/guide-academic-integrity-online-learning-environments. Contact information: rights@gwu.edu or 202-994-6757.\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Computer Science Orientation",
    "section": "",
    "text": "Hands-on exploration of the possibilities in Computer Science\n\n\n\n\nCourse and Contact Information\n\n\n\nCSCI 1010: Computer Science Orientation\nSemester: Fall 2023\nCredits: 1\nLecture location and meeting times:\n\nDuques 151\nFriday 9:35 AM — 10:25 AM\n\nLab location and meeting times:\n\nSEH 1300 & SEH 1400 & SEH 1450\nLab section 30: Friday 10:40 AM - 12:15 PM\nLab section 31: Friday 12:45 PM - 2:10 PM\n\nCourse website: TBA \nInstructor information can be found here\n\n\n\n  \n\n\n\n\n\nGithub Repo (updated weekly)\ngit clone TBA\n\n\nCourse description\nThis is an introductory course designed for first year engineering students majoring in computer science. The course will introduce the students to basics, emerging concepts, and applications of Computer Science, to computing and modeling using Python and projects using Raspberry Pi (Model: 4B). Course will consist of\n\nlectures on the various disciplines in Computer Science,\nhands-on Python programming exercises and\nhands-on exercises and in-class projects using Raspberry Pi 4B single-board computer.\n\nThe students will work on the following two engineering innovation projects:\n\nGuided-python programming project and\nWill have the option of choosing a final Raspberry Pi 4B-based project or a python programming project to address an impending need in engineering-innovation\n\nThrough the above course activities students will be exposed to computing, technical resources and presentations on various aspects in the field of computer science. The students will get access to a “slack-workspace” for this course, that will facilitate offline discussions among themselves and the instruction team. The students will also be provided lecture presentationsand video summaries whenever possible and made available on the course webpage and / or blackboard.\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "instructor.html",
    "href": "instructor.html",
    "title": "Instruction Team",
    "section": "",
    "text": "Dr. Kartik V. Bulusu is an Associate Professor of Practice in the Department of Computer Science (CS) and Associate Research Professor in the Department of Mechanical and Aerospace Engineering (MAE).\n\n\nHis research work entails human health and sustainable energy with focus on biofluid mechanics, polymer rheology, low-cost energy technologies and applications of wavelet transforms.\n\nHe is also working on AI-on-the-edge applications using low-power devices. In his free time, he is loves to tinker with electronics and design low-cost experiments for research and education.\n\n\nDr. Bulusu has been developing low-cost ejector technologies refrigeration in disaster-prone regions and humanitarian needs.\n\n\nOffice hours: On-demand (please reach out via email!)\n\n\nLocation: Blackboard Collaborate Course Room\n\n\n\n\n \n\nCampus Address: SEH 3640\n\n\nE-mail: bulusu at gwu dot edu\n\n\n\n\n\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "instructor.html#instructor",
    "href": "instructor.html#instructor",
    "title": "Instruction Team",
    "section": "",
    "text": "Dr. Kartik V. Bulusu is an Associate Professor of Practice in the Department of Computer Science (CS) and Associate Research Professor in the Department of Mechanical and Aerospace Engineering (MAE).\n\n\nHis research work entails human health and sustainable energy with focus on biofluid mechanics, polymer rheology, low-cost energy technologies and applications of wavelet transforms.\n\nHe is also working on AI-on-the-edge applications using low-power devices. In his free time, he is loves to tinker with electronics and design low-cost experiments for research and education.\n\n\nDr. Bulusu has been developing low-cost ejector technologies refrigeration in disaster-prone regions and humanitarian needs.\n\n\nOffice hours: On-demand (please reach out via email!)\n\n\nLocation: Blackboard Collaborate Course Room\n\n\n\n\n \n\nCampus Address: SEH 3640\n\n\nE-mail: bulusu at gwu dot edu\n\n\n\n\n\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The goal of the course is to introduce the students to the building blocks of the IoT ecosystem with emphasis on Edge Computing."
  },
  {
    "objectID": "about.html#goal",
    "href": "about.html#goal",
    "title": "About",
    "section": "",
    "text": "The goal of the course is to introduce the students to the building blocks of the IoT ecosystem with emphasis on Edge Computing."
  },
  {
    "objectID": "about.html#learning-objectives",
    "href": "about.html#learning-objectives",
    "title": "About",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nHands-on knowledge of Raspberry Pi hardware with Python programming language\nExposure to various sensors with hands-on exercises\nImplement innovative Raspberry Pi-based projects that interact with the physical world"
  },
  {
    "objectID": "about.html#learning-outcomes",
    "href": "about.html#learning-outcomes",
    "title": "About",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nAs a result of completing this course, students will be able to:\n\nUnderstand the various areas of work and research in Computer Science.\nPerform experiments aimed at collecting and analyzing data.\nDesign and write Python programs.\nWork on an engineering-innovation group project.\n\nAdditional Learning Outcomes: - an ability to apply knowledge of computer science and mathematics - an ability to design and conduct experiments, as well as to analyze and interpret data - an ability to identify, formulate, and solve engineering problems - an ability to use the techniques, skills, and modern computing tools necessary for practice of computer science."
  },
  {
    "objectID": "about.html#course-format",
    "href": "about.html#course-format",
    "title": "About",
    "section": "Course format",
    "text": "Course format\n\nLectures on the fundamentals of Raspberry Pi programming using Python programming language, sensors and automation.\n\\(\\mu-labs\\): Hands-on and guided Raspberry Pi activities in a laboratory setting.\nGuest lectures from academic experts and alumni in the field of computer science\nInteractive quizzes and instant concept checks\nIndividual and/or group assignments and projects\nMidterm and Final projects"
  },
  {
    "objectID": "about.html#audience-and-credit-level",
    "href": "about.html#audience-and-credit-level",
    "title": "About",
    "section": "Audience and credit-level",
    "text": "Audience and credit-level\nThe course is designed for first-year undergraduate students as a 1-credit course."
  },
  {
    "objectID": "about.html#prerequisites",
    "href": "about.html#prerequisites",
    "title": "About",
    "section": "Prerequisites",
    "text": "Prerequisites\nNone"
  },
  {
    "objectID": "about.html#time-requirements-and-expectations",
    "href": "about.html#time-requirements-and-expectations",
    "title": "About",
    "section": "Time Requirements and Expectations",
    "text": "Time Requirements and Expectations\nThis course will have 50 minutes of lecture time per week, approximately 90 minutes of laboratory, review, and discussion per week, and will require 2 hours per week on average for homework assignments."
  },
  {
    "objectID": "about.html#textbook-hardware-and-other-course-material",
    "href": "about.html#textbook-hardware-and-other-course-material",
    "title": "About",
    "section": "Textbook, hardware and other course material",
    "text": "Textbook, hardware and other course material\nThere is no textbook requirement for this course. All reading, hardware and course material will be provided by the instructor.\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2022 All rights reserved"
  },
  {
    "objectID": "anaconda-mac.html",
    "href": "anaconda-mac.html",
    "title": "Anaconda Installation Guide for macOS",
    "section": "",
    "text": "This guide will walk you through the process of installing Anaconda, a popular Python distribution, on your macOS computer. Anaconda provides a convenient way to manage Python packages and environments for data science and scientific computing.\n\n\n\nBefore you begin, ensure you have the following:\n\nA macOS computer.\nAn internet connection.\nSufficient disk space for the installation.\n\n\n\n\n\n\nVisit the Anaconda download page at https://www.anaconda.com/downloads.\n\n\n\nClick on the “Download” button under the macOS section depending on you System-on-chip (Intel/M1/M2) to download the Anaconda installer for macOS.\n\n\n\nDownload Anaconda\n\n\n\n\n\n\nLocate the downloaded file (usually in your “Downloads” folder).\nDouble-click the Anaconda disk image (.dmg) file to open it and click on “Allow” when prompted.\n\n\n\n\nRun Installer\n\n\n\n\n\nAllow Installation\n\n\n\n\n\n\nFollow the on-screen instructions to begin the installation.\nRead and accept the license agreement when prompted.\n\n\n\n\nRead Me\n\n\n\n\n\nLicense Agreement\n\n\n\n\n\n\n\n\n\nClick the “Install” button to begin the installation process. This may take a few minutes.\n\n\n\nInstall\n\n\n\n\n\nOnce the installation is complete, you will see a confirmation message. Click the “Continue” button and finally close the installation wizard by clicking on the “Close” button.\n\n\n\nInstallation Complete\n\n\n\n\n\nClose Installation Wizard\n\n\n\n\n\n\n\n\nMove the Installer to Trash\n\n\n\n\n\n\n\n\nDon’t Update\n\n\n\n\n\n\n\n\nDon’t Log in/Sign up\n\n\n\n\n\nOpen the “Terminal” application on your macOS computer and type the following command to verify that Anaconda and Jupyter were installed successfully:\njupyter --version\n\n\n\nOpen Terminal\n\n\n\n\n\nVerify Jupyter Installation\n\n\nYou should see the Jupyter packages version numbers displayed.\n\n\n\n\nCongratulations! You’ve successfully installed Anaconda and Jupyter on your macOS computer. You can now use Anaconda to create Python environments, manage packages, and work on data science projects.\nFor more information on using Anaconda, refer to the official documentation at https://docs.anaconda.com/.\nIf you encounter any issues or have questions, don’t hesitate to seek help from the Anaconda community or consult the documentation for troubleshooting tips.\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "anaconda-mac.html#introduction",
    "href": "anaconda-mac.html#introduction",
    "title": "Anaconda Installation Guide for macOS",
    "section": "",
    "text": "This guide will walk you through the process of installing Anaconda, a popular Python distribution, on your macOS computer. Anaconda provides a convenient way to manage Python packages and environments for data science and scientific computing."
  },
  {
    "objectID": "anaconda-mac.html#prerequisites",
    "href": "anaconda-mac.html#prerequisites",
    "title": "Anaconda Installation Guide for macOS",
    "section": "",
    "text": "Before you begin, ensure you have the following:\n\nA macOS computer.\nAn internet connection.\nSufficient disk space for the installation."
  },
  {
    "objectID": "anaconda-mac.html#installation-steps",
    "href": "anaconda-mac.html#installation-steps",
    "title": "Anaconda Installation Guide for macOS",
    "section": "",
    "text": "Visit the Anaconda download page at https://www.anaconda.com/downloads.\n\n\n\nClick on the “Download” button under the macOS section depending on you System-on-chip (Intel/M1/M2) to download the Anaconda installer for macOS.\n\n\n\nDownload Anaconda\n\n\n\n\n\n\nLocate the downloaded file (usually in your “Downloads” folder).\nDouble-click the Anaconda disk image (.dmg) file to open it and click on “Allow” when prompted.\n\n\n\n\nRun Installer\n\n\n\n\n\nAllow Installation\n\n\n\n\n\n\nFollow the on-screen instructions to begin the installation.\nRead and accept the license agreement when prompted.\n\n\n\n\nRead Me\n\n\n\n\n\nLicense Agreement\n\n\n\n\n\n\n\n\n\nClick the “Install” button to begin the installation process. This may take a few minutes.\n\n\n\nInstall\n\n\n\n\n\nOnce the installation is complete, you will see a confirmation message. Click the “Continue” button and finally close the installation wizard by clicking on the “Close” button.\n\n\n\nInstallation Complete\n\n\n\n\n\nClose Installation Wizard\n\n\n\n\n\n\n\n\nMove the Installer to Trash\n\n\n\n\n\n\n\n\nDon’t Update\n\n\n\n\n\n\n\n\nDon’t Log in/Sign up\n\n\n\n\n\nOpen the “Terminal” application on your macOS computer and type the following command to verify that Anaconda and Jupyter were installed successfully:\njupyter --version\n\n\n\nOpen Terminal\n\n\n\n\n\nVerify Jupyter Installation\n\n\nYou should see the Jupyter packages version numbers displayed."
  },
  {
    "objectID": "anaconda-mac.html#conclusion",
    "href": "anaconda-mac.html#conclusion",
    "title": "Anaconda Installation Guide for macOS",
    "section": "",
    "text": "Congratulations! You’ve successfully installed Anaconda and Jupyter on your macOS computer. You can now use Anaconda to create Python environments, manage packages, and work on data science projects.\nFor more information on using Anaconda, refer to the official documentation at https://docs.anaconda.com/.\nIf you encounter any issues or have questions, don’t hesitate to seek help from the Anaconda community or consult the documentation for troubleshooting tips.\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "getting-started.html",
    "href": "getting-started.html",
    "title": "Installing an Editor",
    "section": "",
    "text": "Running your First Program\n\n\nIn the world of programming, an editor is more than just a text processor. It’s your creative workspace where you bring your code to life. Here are some key aspects of code editors:\n\nText Editing: At its core, an editor allows you to write, edit, and organize code in various programming languages. It provides features like syntax highlighting, auto-indentation, and code completion to enhance your coding experience.\nCode Execution: Some editors, like Jupyter Notebook, not only allow you to write code but also execute it in an interactive and step-by-step manner. This is especially useful for data analysis and experimentation.\nExtensions and Plugins: Code editors are highly customizable. You can enhance their functionality by installing extensions or plugins tailored to your needs. For example, you can add Python-specific tools or themes to make your editor visually appealing.\nIntegrated Development Environments (IDEs): Some editors, such as Visual Studio Code (VS Code), go beyond text editing and offer a complete integrated development environment with debugging capabilities, version control integration, and more.\nCollaboration: Many editors support collaborative coding, allowing multiple programmers to work on the same codebase simultaneously, which is crucial for group projects.\n\nIn your CSCI1010 class, you’ll use a combination of Anaconda, Jupyter, and VS Code:\n\nAnaconda: Anaconda is a Python distribution that simplifies package management and environment setup. It’s particularly valuable for data science projects, as it comes with a wide array of pre-installed libraries and tools.\nJupyter: Jupyter Notebook is an interactive environment that enables you to create and share documents containing live code, equations, visualizations, and narrative text. It’s an excellent choice for data analysis and presenting your findings.\nVS Code: Visual Studio Code (VS Code) is a versatile code editor that supports multiple programming languages and offers a rich ecosystem of extensions. Its user-friendly interface and powerful features make it a great choice for general programming tasks.\n\nThese tools will empower you throughout your CSCI1010 journey, helping you write, execute, and collaborate on code effectively. Select the appropriate option for your operating system, follow the installation instructions, and dive into the world of coding with confidence!\n\n\n\n\n\nStep 1: Install Anaconda for Mac\nStep 2: Install VS Code for Mac\n\n\n\n\n\nStep 1: Install Anaconda for Windows\nStep 2: Install VS Code for Windows\n\nChoose the option that best suits your needs and follow the respective installation instructions.\nOnce you have an editor installed, you can start writing and running your code. Happy coding!\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "getting-started.html#what-is-an-editor",
    "href": "getting-started.html#what-is-an-editor",
    "title": "Installing an Editor",
    "section": "",
    "text": "In the world of programming, an editor is more than just a text processor. It’s your creative workspace where you bring your code to life. Here are some key aspects of code editors:\n\nText Editing: At its core, an editor allows you to write, edit, and organize code in various programming languages. It provides features like syntax highlighting, auto-indentation, and code completion to enhance your coding experience.\nCode Execution: Some editors, like Jupyter Notebook, not only allow you to write code but also execute it in an interactive and step-by-step manner. This is especially useful for data analysis and experimentation.\nExtensions and Plugins: Code editors are highly customizable. You can enhance their functionality by installing extensions or plugins tailored to your needs. For example, you can add Python-specific tools or themes to make your editor visually appealing.\nIntegrated Development Environments (IDEs): Some editors, such as Visual Studio Code (VS Code), go beyond text editing and offer a complete integrated development environment with debugging capabilities, version control integration, and more.\nCollaboration: Many editors support collaborative coding, allowing multiple programmers to work on the same codebase simultaneously, which is crucial for group projects.\n\nIn your CSCI1010 class, you’ll use a combination of Anaconda, Jupyter, and VS Code:\n\nAnaconda: Anaconda is a Python distribution that simplifies package management and environment setup. It’s particularly valuable for data science projects, as it comes with a wide array of pre-installed libraries and tools.\nJupyter: Jupyter Notebook is an interactive environment that enables you to create and share documents containing live code, equations, visualizations, and narrative text. It’s an excellent choice for data analysis and presenting your findings.\nVS Code: Visual Studio Code (VS Code) is a versatile code editor that supports multiple programming languages and offers a rich ecosystem of extensions. Its user-friendly interface and powerful features make it a great choice for general programming tasks.\n\nThese tools will empower you throughout your CSCI1010 journey, helping you write, execute, and collaborate on code effectively. Select the appropriate option for your operating system, follow the installation instructions, and dive into the world of coding with confidence!\n\n\n\n\n\nStep 1: Install Anaconda for Mac\nStep 2: Install VS Code for Mac\n\n\n\n\n\nStep 1: Install Anaconda for Windows\nStep 2: Install VS Code for Windows\n\nChoose the option that best suits your needs and follow the respective installation instructions.\nOnce you have an editor installed, you can start writing and running your code. Happy coding!\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "anaconda-windows.html",
    "href": "anaconda-windows.html",
    "title": "Anaconda Installation Guide for Windows",
    "section": "",
    "text": "This guide will walk you through the process of installing Anaconda, a popular Python distribution, on your Windows computer. Anaconda provides a convenient way to manage Python packages and environments for data science and scientific computing.\n\n\n\nBefore you begin, ensure you have the following:\n\nA Windows computer.\nAn internet connection.\nSufficient disk space for the installation.\n\n\n\n\n\n\nVisit the Anaconda download page at https://www.anaconda.com/products/distribution.\n\n\n\nClick on the “Download” button under the Windows section to download the Anaconda installer for Windows.\n\n\n\n\nLocate the downloaded file (usually in your “Downloads” folder).\nDouble-click the installer executable to run it.\n\n\n\n\nRun Installer\n\n\n\n\n\n\nFollow the on-screen instructions to begin the installation.\nRead and accept the license agreement when prompted.\n\n\n\n\nLicense Agreement\n\n\n\nChoose the installation type. It’s recommended to select “Install for me only” unless you have specific reasons for a different choice.\n\n\n\n\nInstallation Type\n\n\n\nSelect the installation location (the default is usually fine).\n\n\n\n\nInstallation Location\n\n\n\n\n\nClick the “Install” button to begin the installation process. This may take a few minutes.\n\n\n\nInstall\n\n\n\n\n\nOnce the installation is complete, you will see a confirmation message. Click the “Next” button to finish.\n\n\n\nInstallation Complete\n\n\n\n\n\nOpen the “Anaconda Navigator” application from the Windows Start menu or search bar. It should launch without errors.\n\n\n\nLaunch Anaconda Navigator\n\n\n\n\n\n\nCongratulations! You’ve successfully installed Anaconda on your Windows computer. You can now use Anaconda to create Python environments, manage packages, and work on data science projects.\nFor more information on using Anaconda, refer to the official documentation at https://docs.anaconda.com/.\nIf you encounter any issues or have questions, don’t hesitate to seek help from the Anaconda community or consult the documentation for troubleshooting tips.\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "anaconda-windows.html#introduction",
    "href": "anaconda-windows.html#introduction",
    "title": "Anaconda Installation Guide for Windows",
    "section": "",
    "text": "This guide will walk you through the process of installing Anaconda, a popular Python distribution, on your Windows computer. Anaconda provides a convenient way to manage Python packages and environments for data science and scientific computing."
  },
  {
    "objectID": "anaconda-windows.html#prerequisites",
    "href": "anaconda-windows.html#prerequisites",
    "title": "Anaconda Installation Guide for Windows",
    "section": "",
    "text": "Before you begin, ensure you have the following:\n\nA Windows computer.\nAn internet connection.\nSufficient disk space for the installation."
  },
  {
    "objectID": "anaconda-windows.html#installation-steps",
    "href": "anaconda-windows.html#installation-steps",
    "title": "Anaconda Installation Guide for Windows",
    "section": "",
    "text": "Visit the Anaconda download page at https://www.anaconda.com/products/distribution.\n\n\n\nClick on the “Download” button under the Windows section to download the Anaconda installer for Windows.\n\n\n\n\nLocate the downloaded file (usually in your “Downloads” folder).\nDouble-click the installer executable to run it.\n\n\n\n\nRun Installer\n\n\n\n\n\n\nFollow the on-screen instructions to begin the installation.\nRead and accept the license agreement when prompted.\n\n\n\n\nLicense Agreement\n\n\n\nChoose the installation type. It’s recommended to select “Install for me only” unless you have specific reasons for a different choice.\n\n\n\n\nInstallation Type\n\n\n\nSelect the installation location (the default is usually fine).\n\n\n\n\nInstallation Location\n\n\n\n\n\nClick the “Install” button to begin the installation process. This may take a few minutes.\n\n\n\nInstall\n\n\n\n\n\nOnce the installation is complete, you will see a confirmation message. Click the “Next” button to finish.\n\n\n\nInstallation Complete\n\n\n\n\n\nOpen the “Anaconda Navigator” application from the Windows Start menu or search bar. It should launch without errors.\n\n\n\nLaunch Anaconda Navigator"
  },
  {
    "objectID": "anaconda-windows.html#conclusion",
    "href": "anaconda-windows.html#conclusion",
    "title": "Anaconda Installation Guide for Windows",
    "section": "",
    "text": "Congratulations! You’ve successfully installed Anaconda on your Windows computer. You can now use Anaconda to create Python environments, manage packages, and work on data science projects.\nFor more information on using Anaconda, refer to the official documentation at https://docs.anaconda.com/.\nIf you encounter any issues or have questions, don’t hesitate to seek help from the Anaconda community or consult the documentation for troubleshooting tips.\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "vscode-mac.html",
    "href": "vscode-mac.html",
    "title": "Visual Studio Code Installation Guide for macOS",
    "section": "",
    "text": "This guide will walk you through the process of installing Visual Studio Code (VS Code), a popular and versatile code editor, on your macOS computer. VS Code provides a powerful environment for coding and development across various programming languages.\n\n\n\nBefore you begin, ensure you have the following:\n\nA macOS computer.\nAn internet connection.\n\n\n\n\n\n\nVisit the official VS Code download page at https://code.visualstudio.com/download.\n\n\n\nClick on the “macOS” download link to download the Visual Studio Code for macOS.\n\n\n\nDownload VS Code\n\n\n\n\n\n\nLocate the downloaded file (usually in your “Downloads” folder).\nDouble-click the VS Code disk image (.dmg) file to open it.\n\n\n\n\nOpen DMG\n\n\n\nDrag the Visual Studio Code application icon to the “Applications” folder to install it.\n\n\n\n\nInstall VS Code\n\n\n\n\n\nOpen your “Applications” folder and locate the “Visual Studio Code” application. Double-click it to launch the editor.\n\n\n\nLaunch VS Code\n\n\n\n\n\nUpon launching, you can customize Visual Studio Code by installing extensions, themes, and configuring settings to suit your development needs.\n\n\n\nCustomize VS Code\n\n\n\n\n\n\nCongratulations! You’ve successfully installed Visual Studio Code on your macOS computer. VS Code is now ready for you to use as a powerful code editor for various programming languages.\nFeel free to explore the extensions marketplace and customize VS Code to enhance your coding experience. Happy coding!\nFor more information and documentation on Visual Studio Code, visit https://code.visualstudio.com/docs.\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "vscode-mac.html#introduction",
    "href": "vscode-mac.html#introduction",
    "title": "Visual Studio Code Installation Guide for macOS",
    "section": "",
    "text": "This guide will walk you through the process of installing Visual Studio Code (VS Code), a popular and versatile code editor, on your macOS computer. VS Code provides a powerful environment for coding and development across various programming languages."
  },
  {
    "objectID": "vscode-mac.html#prerequisites",
    "href": "vscode-mac.html#prerequisites",
    "title": "Visual Studio Code Installation Guide for macOS",
    "section": "",
    "text": "Before you begin, ensure you have the following:\n\nA macOS computer.\nAn internet connection."
  },
  {
    "objectID": "vscode-mac.html#installation-steps",
    "href": "vscode-mac.html#installation-steps",
    "title": "Visual Studio Code Installation Guide for macOS",
    "section": "",
    "text": "Visit the official VS Code download page at https://code.visualstudio.com/download.\n\n\n\nClick on the “macOS” download link to download the Visual Studio Code for macOS.\n\n\n\nDownload VS Code\n\n\n\n\n\n\nLocate the downloaded file (usually in your “Downloads” folder).\nDouble-click the VS Code disk image (.dmg) file to open it.\n\n\n\n\nOpen DMG\n\n\n\nDrag the Visual Studio Code application icon to the “Applications” folder to install it.\n\n\n\n\nInstall VS Code\n\n\n\n\n\nOpen your “Applications” folder and locate the “Visual Studio Code” application. Double-click it to launch the editor.\n\n\n\nLaunch VS Code\n\n\n\n\n\nUpon launching, you can customize Visual Studio Code by installing extensions, themes, and configuring settings to suit your development needs.\n\n\n\nCustomize VS Code"
  },
  {
    "objectID": "vscode-mac.html#conclusion",
    "href": "vscode-mac.html#conclusion",
    "title": "Visual Studio Code Installation Guide for macOS",
    "section": "",
    "text": "Congratulations! You’ve successfully installed Visual Studio Code on your macOS computer. VS Code is now ready for you to use as a powerful code editor for various programming languages.\nFeel free to explore the extensions marketplace and customize VS Code to enhance your coding experience. Happy coding!\nFor more information and documentation on Visual Studio Code, visit https://code.visualstudio.com/docs.\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "vscode-windows.html",
    "href": "vscode-windows.html",
    "title": "Visual Studio Code Installation Guide for Windows",
    "section": "",
    "text": "This guide will walk you through the process of installing Visual Studio Code (VS Code), a popular and versatile code editor, on your Windows computer. VS Code provides a powerful environment for coding and development across various programming languages.\n\n\n\nBefore you begin, ensure you have the following:\n\nA Windows computer.\nAn internet connection.\n\n\n\n\n\n\nVisit the official VS Code download page at https://code.visualstudio.com/download.\n\n\n\nClick on the “Windows” download link to download the Visual Studio Code installer for Windows.\n\n\n\nDownload VS Code\n\n\n\n\n\n\nLocate the downloaded installer file (usually in your “Downloads” folder).\nDouble-click the installer executable (.exe) file to run it.\n\n\n\n\nRun Installer\n\n\n\n\n\n\nYou will see the VS Code Setup Wizard. Click the “Next” button to begin the installation.\n\n\n\n\nSetup Wizard\n\n\n\n\n\n\nSelect the installation location (the default is usually fine) and click “Next.”\n\n\n\n\nInstallation Location\n\n\n\nChoose additional tasks if desired (e.g., adding VS Code to the PATH). Then, click “Next.”\n\n\n\n\nAdditional Tasks\n\n\n\n\n\nClick the “Install” button to begin the installation process. This may take a few moments.\n\n\n\nInstall\n\n\n\n\n\nAfter the installation is complete, you can leave the “Launch Visual Studio Code” option checked and click “Finish.”\n\n\n\nLaunch VS Code\n\n\n\n\n\nUpon launching, you can customize Visual Studio Code by installing extensions, themes, and configuring settings to suit your development needs.\n\n\n\nCustomize VS Code\n\n\n\n\n\n\nCongratulations! You’ve successfully installed Visual Studio Code on your Windows computer. VS Code is now ready for you to use as a powerful code editor for various programming languages.\nFeel free to explore the extensions marketplace and customize VS Code to enhance your coding experience. Happy coding!\nFor more information and documentation on Visual Studio Code, visit https://code.visualstudio.com/docs.\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "vscode-windows.html#introduction",
    "href": "vscode-windows.html#introduction",
    "title": "Visual Studio Code Installation Guide for Windows",
    "section": "",
    "text": "This guide will walk you through the process of installing Visual Studio Code (VS Code), a popular and versatile code editor, on your Windows computer. VS Code provides a powerful environment for coding and development across various programming languages."
  },
  {
    "objectID": "vscode-windows.html#prerequisites",
    "href": "vscode-windows.html#prerequisites",
    "title": "Visual Studio Code Installation Guide for Windows",
    "section": "",
    "text": "Before you begin, ensure you have the following:\n\nA Windows computer.\nAn internet connection."
  },
  {
    "objectID": "vscode-windows.html#installation-steps",
    "href": "vscode-windows.html#installation-steps",
    "title": "Visual Studio Code Installation Guide for Windows",
    "section": "",
    "text": "Visit the official VS Code download page at https://code.visualstudio.com/download.\n\n\n\nClick on the “Windows” download link to download the Visual Studio Code installer for Windows.\n\n\n\nDownload VS Code\n\n\n\n\n\n\nLocate the downloaded installer file (usually in your “Downloads” folder).\nDouble-click the installer executable (.exe) file to run it.\n\n\n\n\nRun Installer\n\n\n\n\n\n\nYou will see the VS Code Setup Wizard. Click the “Next” button to begin the installation.\n\n\n\n\nSetup Wizard\n\n\n\n\n\n\nSelect the installation location (the default is usually fine) and click “Next.”\n\n\n\n\nInstallation Location\n\n\n\nChoose additional tasks if desired (e.g., adding VS Code to the PATH). Then, click “Next.”\n\n\n\n\nAdditional Tasks\n\n\n\n\n\nClick the “Install” button to begin the installation process. This may take a few moments.\n\n\n\nInstall\n\n\n\n\n\nAfter the installation is complete, you can leave the “Launch Visual Studio Code” option checked and click “Finish.”\n\n\n\nLaunch VS Code\n\n\n\n\n\nUpon launching, you can customize Visual Studio Code by installing extensions, themes, and configuring settings to suit your development needs.\n\n\n\nCustomize VS Code"
  },
  {
    "objectID": "vscode-windows.html#conclusion",
    "href": "vscode-windows.html#conclusion",
    "title": "Visual Studio Code Installation Guide for Windows",
    "section": "",
    "text": "Congratulations! You’ve successfully installed Visual Studio Code on your Windows computer. VS Code is now ready for you to use as a powerful code editor for various programming languages.\nFeel free to explore the extensions marketplace and customize VS Code to enhance your coding experience. Happy coding!\nFor more information and documentation on Visual Studio Code, visit https://code.visualstudio.com/docs.\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "schedule-old.html",
    "href": "schedule-old.html",
    "title": "Schedule",
    "section": "",
    "text": "Sample class schedule [week-by-week]\n(The course schedule subject to changes during the semester)\n\n\n\n\n\n\n\n\n\n\nDate\n\n\nTopic(s)\n\n\n\\(\\mu\\)-LABs and Assignment(s) due\n\n\n\n\n\n\n\n\nWeek 1 [01/20/2023]\n\n\n\n\nOverview of CS1010 by Prof. Kartik Bulusu\n\n\nIntroduction to Computer Science Department by Prof. Rebecca Hwa (Website TBA)\n\n\nIntroduction to Raspberry Pi and Python programming by Prof. Kartik Bulusu (Website TBA)\n\n\nLecture Notes (Website TBA)\n\n\n\n\n\n\n\nPython programming using DeepNote TBA\n\n\nIn-class Raspberry Pi Lab (Blinking LEDs)\n\n\nWorking Styles Workout Survey (Google form TBA)\n\n\nLab examples (github TBA)\n\n\nHW 1 Assigned (Website TBA)\n\n\n\n\n\n\n\n\n\nNOTE: In accordance with university policy, the final exams will be given during the final exam period and not the last week of the semester\n\n\n\n\n\n\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "landing.html",
    "href": "landing.html",
    "title": "CSCI 1010 Computer Science Orientation",
    "section": "",
    "text": "Welcome to CSCI 1010, Computer Science Orientation! This course serves as your gateway to the exciting world of computer science. Whether you’re a novice or have some prior experience, this course will provide you with a strong foundation in key concepts and practices.\n\n\nInstructor: Professor John Doe Term: Fall 2023 Location: Room 123, Main Building\n\n\nCSCI 1010 is designed to introduce you to the fundamental principles of computer science. Topics covered include:\n\nUnderstanding the basics of algorithms and data structures.\nLearning to program in Python.\nExploring the role of computation in various fields.\nGaining problem-solving skills through hands-on projects.\nPreparing for more advanced computer science courses.\n\n\n\n\n\nEngaging lectures and interactive discussions.\nPractical coding exercises and projects.\nAccess to online resources and tutorials.\nCollaborative learning with fellow students.\nGuidance from experienced teaching staff.\n\n\n\n\n\nTo excel in this course, you will need access to:\n\nA personal computer with internet connectivity.\nPython development environment (Anaconda recommended).\nRequired textbooks and course materials (see syllabus).\n\n\n\n\nYou can access the course syllabus here.\n\n\n\nProfessor John Doe’s office hours: - Mondays: 2:00 PM - 4:00 PM - Wednesdays: 10:00 AM - 12:00 PM\nFeel free to drop by during office hours for questions, clarifications, or to discuss any aspect of the course.\n\n\n\nIf you have any questions or concerns, please don’t hesitate to reach out:\n\nProfessor John Doe: john.doe@example.com\nTeaching Assistant: [Name]: ta@example.com\n\nWe look forward to embarking on this exciting journey of computer science exploration with you. Let’s get started!"
  },
  {
    "objectID": "landing.html#course-overview",
    "href": "landing.html#course-overview",
    "title": "CSCI 1010 Computer Science Orientation",
    "section": "",
    "text": "Instructor: Professor John Doe Term: Fall 2023 Location: Room 123, Main Building\n\n\nCSCI 1010 is designed to introduce you to the fundamental principles of computer science. Topics covered include:\n\nUnderstanding the basics of algorithms and data structures.\nLearning to program in Python.\nExploring the role of computation in various fields.\nGaining problem-solving skills through hands-on projects.\nPreparing for more advanced computer science courses.\n\n\n\n\n\nEngaging lectures and interactive discussions.\nPractical coding exercises and projects.\nAccess to online resources and tutorials.\nCollaborative learning with fellow students.\nGuidance from experienced teaching staff."
  },
  {
    "objectID": "landing.html#resources",
    "href": "landing.html#resources",
    "title": "CSCI 1010 Computer Science Orientation",
    "section": "",
    "text": "To excel in this course, you will need access to:\n\nA personal computer with internet connectivity.\nPython development environment (Anaconda recommended).\nRequired textbooks and course materials (see syllabus)."
  },
  {
    "objectID": "landing.html#syllabus",
    "href": "landing.html#syllabus",
    "title": "CSCI 1010 Computer Science Orientation",
    "section": "",
    "text": "You can access the course syllabus here."
  },
  {
    "objectID": "landing.html#office-hours",
    "href": "landing.html#office-hours",
    "title": "CSCI 1010 Computer Science Orientation",
    "section": "",
    "text": "Professor John Doe’s office hours: - Mondays: 2:00 PM - 4:00 PM - Wednesdays: 10:00 AM - 12:00 PM\nFeel free to drop by during office hours for questions, clarifications, or to discuss any aspect of the course."
  },
  {
    "objectID": "landing.html#contact-information",
    "href": "landing.html#contact-information",
    "title": "CSCI 1010 Computer Science Orientation",
    "section": "",
    "text": "If you have any questions or concerns, please don’t hesitate to reach out:\n\nProfessor John Doe: john.doe@example.com\nTeaching Assistant: [Name]: ta@example.com\n\nWe look forward to embarking on this exciting journey of computer science exploration with you. Let’s get started!"
  },
  {
    "objectID": "install-editor.html",
    "href": "install-editor.html",
    "title": "Installing an Editor",
    "section": "",
    "text": "Running your First Program\n\n\nIn the world of programming, an editor is more than just a text processor. It’s your creative workspace where you bring your code to life. Here are some key aspects of code editors:\n\nText Editing: At its core, an editor allows you to write, edit, and organize code in various programming languages. It provides features like syntax highlighting, auto-indentation, and code completion to enhance your coding experience.\nCode Execution: Some editors, like Jupyter Notebook, not only allow you to write code but also execute it in an interactive and step-by-step manner. This is especially useful for data analysis and experimentation.\nExtensions and Plugins: Code editors are highly customizable. You can enhance their functionality by installing extensions or plugins tailored to your needs. For example, you can add Python-specific tools or themes to make your editor visually appealing.\nIntegrated Development Environments (IDEs): Some editors, such as Visual Studio Code (VS Code), go beyond text editing and offer a complete integrated development environment with debugging capabilities, version control integration, and more.\nCollaboration: Many editors support collaborative coding, allowing multiple programmers to work on the same codebase simultaneously, which is crucial for group projects.\n\nIn your CSCI1010 class, you’ll use a combination of Anaconda, Jupyter, and VS Code:\n\nAnaconda: Anaconda is a Python distribution that simplifies package management and environment setup. It’s particularly valuable for data science projects, as it comes with a wide array of pre-installed libraries and tools.\nJupyter: Jupyter Notebook is an interactive environment that enables you to create and share documents containing live code, equations, visualizations, and narrative text. It’s an excellent choice for data analysis and presenting your findings.\nVS Code: Visual Studio Code (VS Code) is a versatile code editor that supports multiple programming languages and offers a rich ecosystem of extensions. Its user-friendly interface and powerful features make it a great choice for general programming tasks.\n\nThese tools will empower you throughout your CSCI1010 journey, helping you write, execute, and collaborate on code effectively. Select the appropriate option for your operating system, follow the installation instructions, and dive into the world of coding with confidence!\n\n\n\n\n\nStep 1: Install Anaconda for Mac\nStep 2: Install VS Code for Mac\n\n\n\n\n\nStep 1: Install Anaconda for Windows\nStep 2: Install VS Code for Windows\n\nChoose the option that best suits your needs and follow the respective installation instructions.\nOnce you have an editor installed, you can start writing and running your code. Happy coding!\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  },
  {
    "objectID": "install-editor.html#what-is-an-editor",
    "href": "install-editor.html#what-is-an-editor",
    "title": "Installing an Editor",
    "section": "",
    "text": "In the world of programming, an editor is more than just a text processor. It’s your creative workspace where you bring your code to life. Here are some key aspects of code editors:\n\nText Editing: At its core, an editor allows you to write, edit, and organize code in various programming languages. It provides features like syntax highlighting, auto-indentation, and code completion to enhance your coding experience.\nCode Execution: Some editors, like Jupyter Notebook, not only allow you to write code but also execute it in an interactive and step-by-step manner. This is especially useful for data analysis and experimentation.\nExtensions and Plugins: Code editors are highly customizable. You can enhance their functionality by installing extensions or plugins tailored to your needs. For example, you can add Python-specific tools or themes to make your editor visually appealing.\nIntegrated Development Environments (IDEs): Some editors, such as Visual Studio Code (VS Code), go beyond text editing and offer a complete integrated development environment with debugging capabilities, version control integration, and more.\nCollaboration: Many editors support collaborative coding, allowing multiple programmers to work on the same codebase simultaneously, which is crucial for group projects.\n\nIn your CSCI1010 class, you’ll use a combination of Anaconda, Jupyter, and VS Code:\n\nAnaconda: Anaconda is a Python distribution that simplifies package management and environment setup. It’s particularly valuable for data science projects, as it comes with a wide array of pre-installed libraries and tools.\nJupyter: Jupyter Notebook is an interactive environment that enables you to create and share documents containing live code, equations, visualizations, and narrative text. It’s an excellent choice for data analysis and presenting your findings.\nVS Code: Visual Studio Code (VS Code) is a versatile code editor that supports multiple programming languages and offers a rich ecosystem of extensions. Its user-friendly interface and powerful features make it a great choice for general programming tasks.\n\nThese tools will empower you throughout your CSCI1010 journey, helping you write, execute, and collaborate on code effectively. Select the appropriate option for your operating system, follow the installation instructions, and dive into the world of coding with confidence!\n\n\n\n\n\nStep 1: Install Anaconda for Mac\nStep 2: Install VS Code for Mac\n\n\n\n\n\nStep 1: Install Anaconda for Windows\nStep 2: Install VS Code for Windows\n\nChoose the option that best suits your needs and follow the respective installation instructions.\nOnce you have an editor installed, you can start writing and running your code. Happy coding!\n\n\n\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites. Author: Kartik Bulusu Contact: bulusu © 2023 All rights reserved"
  }
]